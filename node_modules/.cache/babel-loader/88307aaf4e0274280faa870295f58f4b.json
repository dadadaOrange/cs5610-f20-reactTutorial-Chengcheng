{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/Desktop/react-tutorial/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n\n    this.renderTags = () => {\n      if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 50\n      }, this);\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.formatCount = () => {\n      const count = this.state.count;\n      return count === 0 ? 'Zero' : count;\n    };\n\n    this.getBadgeClasses = () => {\n      let classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/mac/Desktop/react-tutorial/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","renderTags","length","map","tag","formatCount","getBadgeClasses","classes","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAG,CADJ;AAEJC,MAAAA,IAAI,EAAC,CAAC,MAAD,EAAS,MAAT,EAAgB,MAAhB;AAFD,KADoB;;AAAA,SAiB5BC,UAjB4B,GAiBf,MAAM;AACf,UAAI,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAClC;;AACI;AAAA;AAAA,kBACK,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,oBAAeA;AAAf,WAASA,GAAT;AAAA;AAAA;AAAA;AAAA,gBAA3B;AADL;AAAA;AAAA;AAAA;AAAA;AAGP,KAvB2B;;AAAA,SAwB5BC,WAxB4B,GAwBd,MAAM;AAChB,YAAMN,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AAEH,KA5B2B;;AAAA,SA8B5BO,eA9B4B,GA8BV,MAAM;AACpB,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKT,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,aAAOQ,OAAP;AACH,KAlC2B;AAAA;;AAM5BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,SAAS,EAAE,KAAKF,eAAL,EAAjB;AAAA,kBAA0C,KAAKD,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAf2B;;AAqChC,eAAeR,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = {\n        count : 0,\n        tags:['tag1', 'tag2','tag3']\n    };\n\n    render() { \n        return (\n            <div>\n            <h1>Hello</h1>\n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n            <button className=\"btn btn-success btn-sm\"> + </button>\n            {}\n            </div>\n        )\n    }\n\n    renderTags = () => {\n        if (this.state.tags.length === 0) return <p>No tags</p>\n        return   \n            <ul>\n                {this.state.tags.map(tag => <li key={tag}>{tag}</li>)}\n            </ul>\n    }\n    formatCount = () => {\n        const count = this.state.count;\n        return count === 0 ? 'Zero' : count;\n\n    }\n\n    getBadgeClasses = () => {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}